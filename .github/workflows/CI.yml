name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: finance
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.2'
    - uses: actions/checkout@v4
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      working-directory: devFinancas
    - name: Adjust Dependencies
      run: rm -rf ./vendor
      working-directory: devFinancas
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      working-directory: devFinancas
    - name: Generate key
      run: php artisan key:generate
      working-directory: devFinancas
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      working-directory: devFinancas

  frontend:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: package/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package/package-lock.json') }}
    - run: npm ci
      working-directory: package
    - run: npm run build --if-present
      working-directory: package
    - run: npm test
      working-directory: package